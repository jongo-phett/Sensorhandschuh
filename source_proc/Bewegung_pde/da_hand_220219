import processing.serial.*;
Serial port;
float[] fingerWinkel1 = { 0, 0, 0, 0, 0 }; // Winkel (in °) vom Zeige-, Mittel-, Ring- und kleinen Finger, Daumen
float[] fingerWinkel2 = { 0, 0, 0, 0, 0 };
float c;

void setup()  {
  size(640, 500, P3D);
  frameRate(120);
  colorMode(RGB, 10, 10, 10);
  c = color(10, 10, 10);
  port = new Serial(this,"COM4",9600);
  port.bufferUntil('\n');
}

void serialEvent(Serial port)  {
  
  String wert; 
  wert = port.readStringUntil('\n');
  String[] werte = wert.split("\t");
 println("fingerwinkel1"); //Zeigt alle Winkeln des Fingers an.
 printArray(fingerWinkel1);
 
 println("fingerWinkel2");
 printArray(fingerWinkel2); //Zeigt alle Winkeln des Fingers an.
 
if(werte.length == 11)  {
  fingerWinkel1[0] = (int(werte[0])-333) * 0.5;
  fingerWinkel1[1] = int(werte[2]) * 0.1;
  fingerWinkel1[2] = int(werte[4]) * 0.1;
  fingerWinkel1[3] = int(werte[6]) * 0.1;
  fingerWinkel1[4] = int(werte[8]) * 0.1;
  //println(fingerWinkel1[0]);
  
  fingerWinkel2[0] = (int(werte[1])-356)* 0.5;
  fingerWinkel2[1] = int(werte[3]) * 0.1;
  fingerWinkel2[2] = int(werte[5]) * 0.1;
  fingerWinkel2[3] = int(werte[7]) * 0.1;
  fingerWinkel2[4] = int(werte[9]) * 0.1;
 // println(fingerWinkel2[0]);
}
 
}

void draw()  {
//println(frameRate);
  background(c);

  // Ursprung unten in der Mitte + Z negativ nach hinten
  translate(width/2, height, -width);
  stroke(255, 255, 0);
  strokeWeight(3);
  sphere(30);  // 0-Koordinaten

  // rotateY(radians(-20));
  rotateY(radians(map(mouseX, 0, width, 0, 360)));
  
  scale(height*1.2);  // Ab hier folgt ein 1-er Koordinatensystem
    
  // println(fingerWinkel[0]);
  hand(fingerWinkel1, fingerWinkel2);  // Generierung einer rechten Hand
}

void finger(float winkel1, int segmente1, float winkel2, int segmente2)  {
  noFill();
  int i = 0;
  while(i<segmente1)  {
  stroke(255, 0, 0);
  noFill();
  sphere(0.1);
  
  stroke(0, 255, 0);
  rotateX(radians(-winkel1));  // negativ nach vorne
  float segmentlaenge1 = 0.45/segmente1;
  translate(0, -segmentlaenge1/2, 0);  // nach oben
  box(0.2, segmentlaenge1, 0.2);
  translate(0, -segmentlaenge1/2, 0);
  i++;
  }
  
  int j = 0;
  while(j<segmente2)  {
  stroke(255, 0, 0);
  noFill();
  sphere(0.1);
  
  stroke(0, 255, 0);
  rotateX(radians(-winkel2));  // negativ nach vorne
  float segmentlaenge2 = 0.55/segmente2;
  translate(0, -segmentlaenge2/2, 0);  // nach oben
  box(0.2, segmentlaenge2, 0.2);
  translate(0, -segmentlaenge2/2, 0);
  j++;
  }
}

void hand(float[] w1, float[] w2)  {  // Darstellen der linken Hand mit 5 Fingerwinkeln
  // fill(255);
  noFill();
  stroke(0, 0, 255);
  strokeWeight(0.01);  // es bezieht sich alles auf 1, daher 2% der Höhe
  translate(0, -0.25, 0);
  box(0.5, 0.5, 0.1);
  
  translate(-0.25, -0.25, 0); // kleiner Finger in Wurzelposition
  pushMatrix();  // merke die Position
    scale(0.3);            //  (relative) Fingerlänge
    rotateZ(radians(-7));  //  Neigung nach außen gerichtet
    finger(w1[4], 1, w2[4], 2);       //  Finger mit Beugung und 3 Segmenten (Glieder)
  popMatrix();

  translate(0.15, 0, 0); // Ringfinger
  pushMatrix();
    scale(0.4);
    rotateZ(radians(-7));
    finger(w1[3], 1, w2[3], 2);
  popMatrix();

  translate(0.5/3, 0, 0); // Mittelfinger
  pushMatrix();
    scale(0.5);
    rotateZ(radians(0));
    finger(w1[2], 1, w2[2], 2);
  popMatrix();

  translate(0.15, 0, 0); // Zeigefinger
  pushMatrix();
    scale(0.45);
    rotateZ(radians(7));
    finger(w1[1], 1, w2[1], 2);
  popMatrix();

  translate(0.03, 0.4, 0);      // Daumen
  pushMatrix();
    scale(0.3);
    rotateX(radians(+30)); // leichte Rotation nach oben
    rotateZ(radians(60));
    finger(w1[0], 1, w2[0], 1);
  popMatrix();
}
